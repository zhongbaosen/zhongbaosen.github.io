[{"title":"js十大排序算法","date":"2018-03-20T02:00:00.000Z","path":"2018/03/20/201832095843/","text":"排序算法说明对于评述算法优劣术语的说明稳定：如果a原本在b前面，而a=b，排序之后a仍然在b的前面；不稳定：如果a原本在b的前面，而a=b，排序之后a可能会出现在b的后面； 内排序：所有排序操作都在内存中完成；外排序：由于数据太大，因此把数据放在磁盘中，而排序通过磁盘和内存的数据传输才能进行； 时间复杂度: 一个算法执行所耗费的时间。空间复杂度: 运行完一个程序所需内存的大小 排序算法图片总结 avatar 安装之前，最好检查一下是否已经安装有nginx 1find -name nginx 如果系统已经安装了nginx，那么就先卸载 1yum -y remove nginx 首先进入/usr/local目录 1cd /usr/local 从官网下载最新版的nginx 1wget http://nginx.org/download/nginx-1.13.8.tar.gz 解压nginx压缩包 1tar -zxvf nginx-1.13.8.tar.gz 会产生一个nginx-1.13.8 目录，这时进入nginx-1.13.8目录 1cd nginx-1.13.8 接下来安装，使用–prefix参数指定nginx安装的目录,make、make install安装 1./configure $默认安装在/usr/local/nginx 1make &amp;&amp; make install 如果没有报错，顺利完成后，最好看一下nginx的安装目录 1whereis nginx 安装完毕后，进入安装后目录（/usr/local/nginx）便可以启动或停止它了。 到此，使用CentOS安装nginx已经完成了，其实看看还是蛮简单的。","tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"https://blog.senshine.top/tags/JavaScript/"}]},{"title":"服务器部署git代码托管","date":"2018-03-15T09:08:17.000Z","path":"2018/03/15/2018315170718/","text":"具体步骤安装git首先安装git，一般而言，现在的服务器已经内置了git安装包，我们只需要执行简单的安装命令即可安装。比如： 1yum install git 创建git用户及权限我们当然不允许直接使用root来进行通信交互了，所以，我们创建一个git用户来作为今后提交代码的用户。 1adduser git 执行这条命令之后，你发现在/home目录下多了一个git目录，按理来说，现在，你的系统中多了这个git用户，并且家目录在/home/git。但是，我们并不希望这个用户通过ssh连接到服务器上面去，所以，我们要禁止这个用户使用ssh连接上去进行操作。我们通过编辑一个权限文件来处理： 1vi /etc/passwd 找到类似于1git:x:1001:1001:,,,:/home/git:/bin/bash 这样的行，你看到那个末尾的/bin/bash，就是允许ssh连接操作的权限，我们把它改为/user/bin/git-shell，结果如下： 1git:x:1001:1001:,,,:/home/git:/usr/bin/git-shell 这样处理好，git就不能ssh连上去了（实际上是可以的，只不过会闪退）。 我们还得给git分配一个密码，执行： 1passwd git 123456 #(你的密码) 这个密码用在你后面提交代码的时候使用。 公钥的配置这个是git里面比较特殊的一步操作，通信的时候，客户端与服务器需要一个证书进行验证。操作方法很简单，首先在你自己的电脑上（centos）生成自己的一个公钥： 123cd ~ssh-keygen -t rsa 这时你自己电脑上就有一个公钥了，但是在哪里呢？在.ssh目录下，.开头的文件夹都是隐藏的，但是可以cd进去。 123cd .sshvi id_rsa.pub 这样就能看到你的公钥了，把所有的内容复制下来。接下来，我们去回服务器上面操作。 1234567cd /home/git/mkdir .sshcd .sshvi authorized_keys 接下来，我们用git命令初始化一个仓库： 1git init --bare arepoforyourproject.git 初始化完成之后，这个空的仓库就OK了。 这里有一个细节，就是.git目录必须要有可读写权限，因为当我们在push的时候，是使用git用户推送到服务器上面去，会有一个写入的过程，如果不赋予可写权限，push就会失败。 试验克隆回到你本地的电脑上，我们通过克隆来试试仓库是否可以使用：1git clone git@10.0.0.121:/var/git/arepoforyourproject.git 然后会提示你输入git的密码，输入进去，然后会再提示你克隆了一个空白的版本库。这说明服务器已经OK了。 多用户和权限管理如果团队很小，把每个人的公钥收集起来放到服务器的/home/git/.ssh/authorized_keys文件里就是可行的。如果团队有几百号人，就没法这么玩了，这时，可以用Gitosis来管理公钥。","tags":[{"name":"centos","slug":"centos","permalink":"https://blog.senshine.top/tags/centos/"},{"name":"git","slug":"git","permalink":"https://blog.senshine.top/tags/git/"}]},{"title":"Nginx反向代理及web部署","date":"2018-03-15T06:03:44.000Z","path":"2018/03/15/2018315140242/","text":"安装步骤安装准备由于我的vue项目部署需要容器 同时也需要反向代理服务器接口 就写了这个教程进行分享 安装Nginx部署之前，最好检查一下是否已经安装有nginx 这里我用的是sh文件一键安装的，就不阐述过程了 以下是Nginx配置 12345678910111213141516171819202122232425262728293031323334server &#123; listen 80 default; #listen [::]:80 default ipv6only=on; server_name platform.senshine.top; index index.html index.htm index.php; root /home/wwwroot/default; #error_page 404 /404.html; location ^~/haha/ &#123; #添加访问目录为/proxy的代理配置 rewrite ^.+/haha/?(.*)$ /$1 break; proxy_pass [your url]; &#125; location /user/login &#123; #添加访问目录为/bproxy的代理配置 rewrite ^.+/user/login/?(.*)$ /$1 break; proxy_pass [your url]; &#125; location /get_state &#123; #添加访问目录为/aproxy的代理配置 rewrite ^.+/get_state/?(.*)$ /$1 break; proxy_pass [your url]; &#125; location /get_list &#123; #添加访问目录为/aproxy的代理配置 rewrite ^.+/get_list/?(.*)$ /$1 break; proxy_pass [your url]; &#125; access_log /home/wwwlogs/access.log access; &#125;include vhost/*.conf;&#125;","tags":[{"name":"nginx","slug":"nginx","permalink":"https://blog.senshine.top/tags/nginx/"},{"name":"Vue","slug":"Vue","permalink":"https://blog.senshine.top/tags/Vue/"}]},{"title":"CentOS7 安装 Postgresql","date":"2018-03-15T02:16:10.000Z","path":"2018/03/15/2018315101523/","text":"安装步骤在yum库里更新postgresql安装包1rpm -Uvh http://yum.postgresql.org/9.5/redhat/rhel-7-x86_64/pgdg-centos95-9.5-2.noarch.rpm 1yum update 添加RPM1yum install https://download.postgresql.org/pub/repos/yum/9.5/redhat/rhel-7-x86_64/pgdg-centos95-9.5-2.noarch.rpm 安装postgresql1yum install postgresql95-server postgresql95-contrib 初始化PostgreSQL数据库1/usr/pgsql-9.5/bin/postgresql95-setup initdb 启动PostgreSQL服务并使之开机自启1systemctl enable postgresql-9.5 1systemctl start postgresql-9.5 调整Iptables/Firewall，调整防火墙出站规则1firewall-cmd --zone=public --add-port=5432/tcp --permanent 重启防火墙1firewall-cmd --reload 设置用户密码 登陆至postgres命令提示符界面1su - postgres 1psql 然后使用命令设置密码1234567891011postgres=# \\password postgres Enter new password: Enter it again: postgres=# \\q su root 输入root账号的密码：******** 配置PostgreSQL-MD5认证MD5认证需要客户端提供一个MD5-encrypted 密码以便身份验证。需要编辑 1vi /var/lib/pgsql/9.5/data/pg_hba.conf 添加或修改的行如下： 12345# IPv4 local connections:host all all 127.0.0.1/32 md5host all all 0.0.0.0/0 md5 配置PostgreSQL-Configure TCP/IP默认情况下，TCP/IP连接是不可行的，所以其他计算机用户不能连接到postgresql。 1vi /var/lib/pgsql/9.5/data/postgresql.conf #可以允许其他计算机连接。 把两行都注析掉并设置为你的postgresql服务器IP地址或设置为“*”监听所有客户端。如下所示： 123listen_addresses = '*'port = 5432 重启以应用更改1systemctl restart postgresql-9.5","tags":[{"name":"centos","slug":"centos","permalink":"https://blog.senshine.top/tags/centos/"},{"name":"postgresql","slug":"postgresql","permalink":"https://blog.senshine.top/tags/postgresql/"}]},{"title":"CentOS7yum安装nginx(sh脚本)","date":"2018-03-15T02:11:01.000Z","path":"2018/03/15/123456789/","text":"#!/bin/bashPATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:~/binexport PATH #安装依赖环境yum install -y patch openssl make cmake gcc gcc-c++ gcc-g77 flex bison file libtool libtool-libs autoconf kernel-devel libjpeg libjpeg-devel libpng libpng-devel libpng10 libpng10-devel gd gd-devel freetype freetype-devel libxml2 libxml2-devel zlib zlib-devel glib2 glib2-devel bzip2 bzip2-devel libevent libevent-devel ncurses ncurses-devel curl curl-devel e2fsprogs e2fsprogs-devel krb5 krb5-devel libidn libidn-devel openssl openssl-devel vim-minimal nano fonts-chinese gettext gettext-devel ncurses-devel gmp-devel pspell-devel unzip libcap diffutils #安装PCREwget http://downloads.sourceforge.net/project/pcre/pcre/8.36/pcre-8.36.tar.gztar zxf pcre-8.36.tar.gzcd pcre-8.36/./configure &amp;&amp; make &amp;&amp; make installcd ../ #安装NGINXwget http://nginx.org/download/nginx-1.6.3.tar.gztar zxf nginx-1.6.3.tar.gzcd nginx-1.6.3/./configure –user=nobody –group=nobody –prefix=/usr/local/nginx –with-http_stub_status_module –with-http_ssl_module –with-http_gzip_static_module –with-ipv6 –with-http_sub_module –with-http_spdy_modulemake &amp;&amp; make installcd ../ ln -s /usr/local/lib/libpcre.so.1 /libln -s /usr/local/nginx/sbin/nginx /usr/bin/nginxrm -f /usr/local/nginx/conf/nginx.confmkdir -p /home/wwwroot/defaultchmod +w /home/wwwroot/defaultmkdir -p /home/wwwlogschmod 777 /home/wwwlogschown -R nobody:nobody /home/wwwroot/default wget -c http://soft.vpser.net/lnmp/ext/init.d.nginxcp init.d.nginx /etc/init.d/nginxchmod +x /etc/init.d/nginxchkconfig –level 345 nginx on/sbin/iptables -I INPUT -p tcp –dport 80 -j ACCEPT/sbin/iptables-saveldconfigwget -c http://redbook.qiniudn.com/nginx.confmv nginx.conf /usr/local/nginx/conf//etc/init.d/nginx start","tags":[{"name":"centos","slug":"centos","permalink":"https://blog.senshine.top/tags/centos/"},{"name":"nginx","slug":"nginx","permalink":"https://blog.senshine.top/tags/nginx/"}]},{"title":"CentOS7yum安装nginx","date":"2018-03-14T02:49:46.000Z","path":"2018/03/14/201831402927/","text":"安装步骤安装准备首先由于nginx的一些模块依赖一些lib库，所以在安装nginx之前，必须先安装这些lib库，这些依赖库主要有g++、gcc、openssl-devel、pcre-devel和zlib-devel 所以执行如下命令安装 1yum -y install gcc-c++ pcre pcre-devel zlib zlib-devel openssl openssl--devel 安装Nginx安装之前，最好检查一下是否已经安装有nginx 1find -name nginx 如果系统已经安装了nginx，那么就先卸载 1yum -y remove nginx 首先进入/usr/local目录 1cd /usr/local 从官网下载最新版的nginx 1wget http://nginx.org/download/nginx-1.13.8.tar.gz 解压nginx压缩包 1tar -zxvf nginx-1.13.8.tar.gz 会产生一个nginx-1.13.8 目录，这时进入nginx-1.13.8目录 1cd nginx-1.13.8 接下来安装，使用–prefix参数指定nginx安装的目录,make、make install安装 1./configure $默认安装在/usr/local/nginx 1make &amp;&amp; make install 如果没有报错，顺利完成后，最好看一下nginx的安装目录 1whereis nginx 安装完毕后，进入安装后目录（/usr/local/nginx）便可以启动或停止它了。 到此，使用CentOS安装nginx已经完成了，其实看看还是蛮简单的。","tags":[{"name":"centos","slug":"centos","permalink":"https://blog.senshine.top/tags/centos/"},{"name":"nginx","slug":"nginx","permalink":"https://blog.senshine.top/tags/nginx/"}]},{"title":"centos7.防火墙的基本使用","date":"2018-03-13T15:50:14.000Z","path":"2018/03/13/2018313234311/","text":"使用方法查看防火墙状态1firewall-cmd --state 返回running，防火墙在运行返回not running，防火墙已经关闭。 关闭防火墙命令1systemctl stop firewalld.service 开启防火墙命令1systemctl start firewalld.service 查看防火墙设置1iptables -L 查看以开放的端口1firewall-cmd --zone=public --list-all 注意：如果要开放某个端口，要在防火墙开起来running的前提下才可以！ 添加端口1firewall-cmd --zone=public --add-port=5432/tcp --permanent (开放5432端口) 1firewall-cmd --reload （重启生效） 删除端口1firewall-cmd --zone=public --remove-port=/tcp --permanent 1firewall-cmd --reload （重启生效） 重启防火墙1systemctl restart firewalld.service","tags":[{"name":"centos","slug":"centos","permalink":"https://blog.senshine.top/tags/centos/"},{"name":"防火墙","slug":"防火墙","permalink":"https://blog.senshine.top/tags/防火墙/"}]},{"title":"centos安装nodejs简易版本","date":"2018-03-13T15:19:51.000Z","path":"2018/03/13/2018313231922/","text":"安装步骤选择合适的版本安装4.x版本 1curl --silent --location https://rpm.nodesource.com/setup_4.x | bash - 5.x版本 1curl --silent --location https://rpm.nodesource.com/setup_5.x | bash - 8.x版本 1curl --silent --location https://rpm.nodesource.com/setup_8.x | bash - 安装依赖库1yum -y install gcc make gcc-c++ openssl-devel wget 或者 1yum install -y gcc-c++ make 快速安装1yum install -y nodejs 检查nodejs和npm版本1node -v 1npm -v","tags":[{"name":"centos","slug":"centos","permalink":"https://blog.senshine.top/tags/centos/"},{"name":"nodejs","slug":"nodejs","permalink":"https://blog.senshine.top/tags/nodejs/"}]}]